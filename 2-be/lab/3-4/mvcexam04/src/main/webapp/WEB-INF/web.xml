<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		 http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">

<!-- java config spring 설정 읽어들이도록 DispathcherServlet 설정 -->
	<display-name>Spring JavaConfig Sample</display-name>

	<servlet>
	
		<servlet-name>mvc</servlet-name>  
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!-- Spring이 제공하고 있는 DispatcherServlet, 이것을 FrontController로 할 거예요. -->
		
		<init-param>
			<param-name>contextClass</param-name>
			<!-- 빈공장 -->
			<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
		</init-param>
		
<!-- WebMvcContextConfiguration에 들어있는 설정들을 읽어내서 수행되어야 함. init-param 부분에 설정하고 있음 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- 항상 클래스 등록 시 패키지 명 명시 -->
			<param-value>kr.or.connect.mvcexam.config.WebMvcContextConfiguration</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
<!--url이 /하고 들어오면 모든 요청이 될 수 있겠죠
	  servlet-name(여기선 mvc)이랑 같은 서블릿에 등록되어 있는 서블릿 클래스가 실행돼라.(위에 찾아감) -->
	<servlet-mapping>
		<servlet-name>mvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

<filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
    </filter-class>
    <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
    </init-param>
</filter>
<filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
</filter-mapping>


</web-app>



